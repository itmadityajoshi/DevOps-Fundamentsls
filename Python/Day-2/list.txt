
In Python, an array is a data structure that stores a collection of items, typically of the same data type, in a contiguous block of memory. Arrays allow you to perform operations on multiple elements efficiently. However, Python does not have a built-in array data type like some other languages (e.g., C or Java). Instead, Python provides two main ways to work with arrays:

1. Using the list data type:
Python's built-in list is a flexible and commonly used data structure that can store elements of different types.
Lists are dynamic, meaning their size can change, and they support a wide range of operations.
Example:

2. Using the array module:
The array module provides a more memory-efficient array implementation, but it requires all elements to be of the same type.
You must specify the type of elements when creating an array (e.g., integers, floats).
Example:

Here, 'i' specifies that the array will store integers.

3. Using NumPy arrays (for advanced use cases):
The numpy library provides powerful array objects that support multi-dimensional arrays and a wide range of mathematical operations.
NumPy arrays are faster and more efficient for numerical computations compared to Python lists.
Example:

Key Differences:
Lists are versatile and can store mixed data types but are less efficient for numerical operations.
array module arrays are more memory-efficient but limited to single data types.
NumPy arrays are ideal for numerical and scientific computing.
If you're working with numerical data or need high performance, consider using NumPy arrays. Otherwise, Python lists are sufficient for most general-purpose tasks.



#comments in Python

comments are used to explain code and are ignored by the python interpreter.

single-line comments are denoated by #This is single line comment.
and 
multi-lines comments are denoated by  ''' This is a multiline comment '''.


Escape Sequences
 \n: Newline
 \t: tab
 \\: Blacklash
 \": Double quote   
 \': single quote


 For instances,
 print("Hello\nWorld!")
 print("This is a tab\tcharacter.")